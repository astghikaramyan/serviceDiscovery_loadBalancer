services:
  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"

  gateway-service:
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - eureka-server

  resource_db:
    image: postgres:17-alpine
    container_name: resource_postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${RESOURCE_DB}
    volumes:
      - ./init-scripts/resource-db/create-table-init.sql:/docker-entrypoint-initdb.d/create-table-init.sql

  song_db:
    image: postgres:17-alpine
    container_name: song_postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${SONG_DB}
    volumes:
      - ./init-scripts/song-db/create-table-init.sql:/docker-entrypoint-initdb.d/create-table-init.sql

  resource-service:
    build:
      context: ./resource-service
      dockerfile: Dockerfile
    depends_on:
      - resource_db
      - eureka-server

  song-service:
    build:
      context: ./song-service
      dockerfile: Dockerfile
    deploy:
      replicas: 2
    depends_on:
      - song_db
      - eureka-server